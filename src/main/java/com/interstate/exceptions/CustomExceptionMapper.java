package com.interstate.exceptions;

import org.apache.http.HttpStatus;
import org.apache.log4j.Logger;

import javax.ws.rs.core.Response;
import javax.ws.rs.ext.ExceptionMapper;
import javax.ws.rs.ext.Provider;

/**
 * This class converts exceptions generated by application to be logged by customized log4j logger,
 * and also returns the exception in the response.
 *
 * By default, Jersey uses java.util.logger for logging. In order to enable more advanced and convenient features
 * for logging, this Exception Mapper is used to do customized logging. In the future if a unified exception handling/logging
 * need to be added, it can be added here.
 *
 * @author bopan
 */
@Provider
public class CustomExceptionMapper implements ExceptionMapper<Exception> {
    private static final Logger logger = Logger.getLogger(CustomExceptionMapper.class);

    @Override
    public Response toResponse(Exception exception) {
        logger.error("Exception caught: ", exception);
        return Response.status(HttpStatus.SC_INTERNAL_SERVER_ERROR).entity("Illegal Argument Exception Caught").build();
    }
}